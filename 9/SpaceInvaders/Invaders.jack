class Invaders {
    field int rowsCount, y, speed, arrCounter;
    field Array aliens, bullets;
    field boolean direction;


    constructor InvadersConstruct new(int rows) {
        let this.rowsCount = rows;
        let this.direction = false;
        let this.y = 40;
        let this.aliens = this.initializeAliens();
        let this.speed = 1;
        let this.arrCounter = this.rowsCount * ((512 - 80) / 30);                       // Initialize arrCounter to the total number of aliens
        return this;
    }


    method void update() {
        var int updateCounter;
        var boolean hasChanged;
        let updateCounter = 0;

        while (updateCounter < this.arrCounter) {
            if (this.direction = true) { let this.aliens[updateCounter].x = this.aliens[updateCounter] + this.speed; }
            else { let this.aliens[updateCounter].x = this.aliens[updateCounter] - this.speed; }
            let updateCounter = updateCounter + 1;
        }

        let boolean hasChanged = this.hasChangedDirection();
        if (hasChanged = true) { do this.moveAlienDown(); }
    }


    method boolean hasChangedDirection() {
        var int updateCounter;
        let updateCounter = 0;
        
        while (updateCounter < this.arrCounter) {
            if ((this.aliens[updateCounter].x = 512 - 40) | (this.aliens[updateCounter].x > 512 - 40)) {
                let this.direction = false;
                return true;
            }
            let updateCounter = updateCounter + 1;
        }
        return false;
    }


    method void moveAlienDown() {
        var int updateCounter;
        let updateCounter = 0;
        
        while (updateCounter < this.arrCounter) {
            let this.aliens[updateCounter].y = this.aliens[updateCounter].y + 10;
            let updateCounter = updateCounter + 1;
        }
    }


    method Array initialiseAliens() {
        var Array updateAliens;
        var int updateY;
        var int updateX;
        var int counterI;
        var int index;

        let updateY = 40;
        let counterI = 0;
        let index = 0;
        let updateAliens = Array.new(this.rowsCount * ((512 - 80) / 30));             // Calculate num of aliens, - 80 to account for margins, / 30 for 30 aliens per row

        // Add new correctly positioned alien object
        while (counterI < this.rowsCount) {
            let updateX = 40;
            while (updateX < 512 - 40) {
                let updateAliens[index] = Alien.new(updateX, updateY);
                let updateX = updateX + 30;                                           // Increment by 30 to place next alien 30 pixels to the right of previous one                                    
                let index = index + 1;
            }
            let updateY = updateY + 40;                                               // Increment by 40 to place next row of aliens 40 pixels below previous row
            let counterI = counterI + 1;
        }
        return updateAliens;
    }


    method void draw() {
        var int updateCounter;
        let updateCounter = 0;
        
        while (updateCounter < this.arrCounter) {
            do this.aliens[updateCounter].draw();
            let updateCounter = updateCounter + 1;
        }
    }
}